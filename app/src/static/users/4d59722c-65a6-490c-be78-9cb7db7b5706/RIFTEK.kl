PROGRAM RIFTEK_TEST

%NOLOCKGROUP
%NOPAUSE=ERROR+COMMAND+TPENABLE
%ENVIRONMENT uif
%ENVIRONMENT sysdef
%ENVIRONMENT memo
%ENVIRONMENT kclop
%ENVIRONMENT bynam
%ENVIRONMENT fdev
%ENVIRONMENT flbt
%ENVIRONMENT regope
%ENVIRONMENT TIM
%ENVIRONMENT STRNG
%ENVIRONMENT PATHOP
--------------------------------------------------

CONST
cc_home = 137
cc_clear_win = 128

VAR

COMM_FILE : FILE
STATUS : INTEGER

BYTE_1:INTEGER
BYTE_2:INTEGER
BYTE_3:INTEGER
BYTE_4:INTEGER

-----------------------------
ROUTINE POSTERR(cause: STRING)
BEGIN
  IF STATUS <> 0 THEN
    POST_ERR(STATUS, '', 0, 0)
  ENDIF  
END POSTERR
-------------------------------


BEGIN
	
WRITE (CHR(cc_home), CHR(cc_clear_win)) -- Clear TP USER menu
	

  SET_FILE_ATR(comm_file, ATR_UF)
  SET_FILE_ATR(comm_file, ATR_IA)

  STATUS = SET_PORT_ATR(PORT_3, ATR_BAUD, BAUD_9600)
  POSTERR('Error setting ATR_BAUD!')
  STATUS = SET_PORT_ATR(PORT_3, ATR_DBITS, DBITS_8)
  POSTERR('Error setting ATR_DBITS!')
  STATUS = SET_PORT_ATR(PORT_3, ATR_PARITY, PARITY_EVEN)
  POSTERR('Error setting ATR_PARITY!')
  STATUS = SET_PORT_ATR(PORT_3, ATR_READAHD, 1)
  POSTERR('Error setting ATR_READAHD!')
  STATUS = SET_PORT_ATR(PORT_3, ATR_SBITS, SBITS_1)
  POSTERR('Error setting ATR_SBITS!')

  ----------------------------------------------------------------
  -- OPEN FILE --
  ----------------------------------------------------------------
  
  CLR_IO_STAT(comm_file)
  STATUS = 0
  
  OPEN FILE comm_file('RW', 'P3:')
  STATUS = IO_STATUS(comm_file)
  WRITE('OPEN FILE STATUS  =  ',STATUS,CR)
  
  ----------------------------------------------------------------
  -- SEND COMMAND --
  ----------------------------------------------------------------
  
  CLR_IO_STAT(comm_file)
  STATUS = 0
  
  -- SEND REQUEST (01h;86h)--

  WRITE comm_file(1::1)
  WRITE comm_file(134::1)
--------------------------------------------------------
  
  STATUS = IO_STATUS(comm_file) 
  WRITE('FILE STATUS  =  ',STATUS,CR)
  
    ----------------------------------------------------------------
  -- GET ANSWER byte by byte--
  ----------------------------------------------------------------

    READ comm_file(BYTE_1::1)
    READ comm_file(BYTE_2::1)
    READ comm_file(BYTE_3::1)
    READ comm_file(BYTE_4::1)		
    	
   WRITE('SUCCESS! ',CR)
   
   SET_INT_REG(1,BYTE_1,STATUS)	
   SET_INT_REG(2,BYTE_2,STATUS)
   SET_INT_REG(3,BYTE_3,STATUS)
   SET_INT_REG(4,BYTE_4,STATUS)
            	
  ----------------------------------------------------------------
  -- CLOSE FILE --
  ----------------------------------------------------------------
  
  CLR_IO_STAT(comm_file) 
  STATUS = 0
  
  CLOSE FILE comm_file
  STATUS = IO_STATUS(comm_file)	
		

END RIFTEK_TEST